version: "3.8"

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root  # Change this to a stronger password in production
      MYSQL_DATABASE: devops
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      - mysql-data:/var/lib/mysql  # Using a named volume for persistent data
      - ./message.sql:/docker-entrypoint-initdb.d/message.sql  # Ensure this file exists
    networks:
      - twotier
    healthcheck:
      test: ["CMD", "mysql", "-uroot", "-proot", "-e", "SHOW DATABASES;"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s  # Increase start period to ensure MySQL is fully initialized
    restart: always

  flask-app:
    build:
      context: .  # Ensure your Flask app Dockerfile is in the current directory
    container_name: flask-app
    ports:
      - "5000:5000"  # Ensure Flask app listens on port 5000 inside the container
    environment:
      MYSQL_HOST: mysql  # Hostname of the MySQL service (container name)
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DB: devops
    depends_on:
      - mysql
    networks:
      - twotier
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s  # Increase start period to give Flask app more time to start
    restart: always

networks:
  twotier:
    driver: bridge

volumes:
  mysql-data:  # Define the named volume for MySQL data

